<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="aee5fded-3e8a-4ef6-b0e5-3f11b2c496b4" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/core/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/core/pom.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="JpbToolWindowState">
    <option name="isToolWindowVisible" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2emgjCc7Ly5FibbpqLsqfYlDDqE" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.ScheduleRunner.executor": "Run",
    "Application.TkEtlprocApplication.executor": "Run",
    "Docker.core/Dockerfile.executor": "Run",
    "Docker.core/docker-compose.yaml.myapp: Compose Deployment.executor": "Run",
    "Docker.core/docker-compose.yaml.sqlserver: Compose Deployment.executor": "Run",
    "Docker.core/docker-compose.yaml: Compose Deployment.executor": "Run",
    "JUnit.ConvertTest.testConvertJsonToCSV.executor": "Run",
    "JUnit.HttpConnectionTests.testHttpConnection.executor": "Run",
    "JUnit.TkEtlprocApplicationTests.contextLoads.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "TODO_SCOPE": "All Places",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "hotfix",
    "jdk.selected.JAVA_MODULE": "17",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/korni/nifi",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "project.propCompiler",
    "spring.configuration.checksum": "2f79018a6c27ba30bd6551990eb3321a"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql",
      "sqlserver",
      "sqlserver.localdb"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\korni\IdeaProjects\tketl\structure\src\main\java\org\example\structure\DTO" />
      <recent name="C:\Users\korni\IdeaProjects\tketl\schedule" />
      <recent name="C:\Users\korni\IdeaProjects\tketl\core" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.core/docker-compose.yaml.myapp: Compose Deployment">
    <configuration name="TkEtlprocApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.tketl.TkEtlprocApplication" />
      <module name="core" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.tketl.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ConvertTest.testConvertJsonToCSV" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.tk_etlproc.Converting.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.example.tk_etlproc.Converting" />
      <option name="MAIN_CLASS_NAME" value="com.example.tk_etlproc.Converting.ConvertTest" />
      <option name="METHOD_NAME" value="testConvertJsonToCSV" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpConnectionTests.testHttpConnection" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.tk_etlproc.HTTP.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.example.tk_etlproc.HTTP" />
      <option name="MAIN_CLASS_NAME" value="com.example.tk_etlproc.HTTP.HttpConnectionTests" />
      <option name="METHOD_NAME" value="testHttpConnection" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="tketlapp" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="tketlapp" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScheduleRunner (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="scheduling" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.scheduling.ScheduleRunner" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScheduleRunner" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="schedule" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.scheduling.ScheduleRunner" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="core/docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="core/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="core/docker-compose.yaml.myapp: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="myapp" />
            </list>
          </option>
          <option name="sourceFilePath" value="core/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.core/docker-compose.yaml.myapp: Compose Deployment" />
        <item itemvalue="JUnit.ConvertTest.testConvertJsonToCSV" />
        <item itemvalue="Docker.core/docker-compose.yaml: Compose Deployment" />
        <item itemvalue="JUnit.HttpConnectionTests.testHttpConnection" />
        <item itemvalue="Application.TkEtlprocApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="aee5fded-3e8a-4ef6-b0e5-3f11b2c496b4" name="Changes" comment="" />
      <created>1712515300278</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712515300278</updated>
      <workItem from="1712515301984" duration="4115000" />
      <workItem from="1712593215076" duration="1001000" />
      <workItem from="1712606926831" duration="1710000" />
      <workItem from="1712682553342" duration="6216000" />
      <workItem from="1712778077480" duration="1667000" />
      <workItem from="1712863092598" duration="4256000" />
      <workItem from="1713032997991" duration="8982000" />
      <workItem from="1713091230743" duration="2812000" />
      <workItem from="1713106301201" duration="6771000" />
      <workItem from="1713292737081" duration="2719000" />
      <workItem from="1713372781491" duration="3514000" />
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/core/src/main/java/com/example/tketl/processing/steps/groupby/GroupByStep.java</url>
          <line>31</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/core/src/main/java/com/example/tketl/processing/steps/groupby/GroupByStep.java</url>
          <line>32</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>